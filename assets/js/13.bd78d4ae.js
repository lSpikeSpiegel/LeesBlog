(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{411:function(s,t,a){s.exports=a.p+"assets/img/ghpages.766273dd.png"},426:function(s,t,a){"use strict";a.r(t);var n=a(1),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h3",{attrs:{id:"本节前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#本节前言"}},[s._v("#")]),s._v(" 本节前言")]),s._v(" "),t("p",[s._v("完成了博客的基础搭建之后, 我们的最后一步, 当然就是部署了, 这里我们部署到免费的 Github Pages 上;")]),s._v(" "),t("h3",{attrs:{id:"配置-config-js"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置-config-js"}},[s._v("#")]),s._v(" 配置 config.js")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("module"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("base")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/LeesBlog/'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这里应该是你个人项目对应的github仓库地址")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("h3",{attrs:{id:"配置部署文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置部署文件"}},[s._v("#")]),s._v(" 配置部署文件")]),s._v(" "),t("p",[s._v("然后我们在项目的根目录下, 创建一个脚本文件: deploy.sh , 对其做如下配置")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/usr/bin/env sh")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 确保脚本抛出遇到的错误")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" -e\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 生成静态文件")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run build\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 进入生成的文件夹")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" docs/.vuepress/dist\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" init\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" -A\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -m "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'deploy'")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 这里的push的仓库地址, 就是仓库的克隆地址, 需要你自行做相应的更改")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push -f https://github.com/lSpikeSpiegel/LeesBlog.git master:gh-pages\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" -\n")])])]),t("h3",{attrs:{id:"项目部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#项目部署"}},[s._v("#")]),s._v(" 项目部署")]),s._v(" "),t("p",[s._v("最后, 提交代码, 提交之后在项目根目录下, 使用 git bash 执行脚本文件(windows 系统的 cmd、powershell 均无法执行 sh 命令, 为了方便我们部署项目, 你可以在 git bash 下执行) sh deploy.sh. 此时项目就开始构建、打包完成之后就会推送到你个人项目的 ghpages 分支下, 在你的项目仓库 -> settings -> pages 下会展示出你的项目部署路径, 如下:\n"),t("img",{attrs:{src:a(411),alt:"图片"}})]),s._v(" "),t("p",[s._v("好了, 至此你已经完成了个人博客的搭建。")])])}),[],!1,null,null,null);t.default=e.exports}}]);